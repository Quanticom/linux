name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2
    - name: RPMRC
      run: echo -e "buildarchtranslate:\ti386:\tx86_64\nbuildarchtranslate:\ti486:\tx86_64\nbuildarchtranslate:\ti586:\tx86_64\nbuildarchtranslate:\ti686:\tx86_64\nbuildarchtranslate:\tathlon:\tx86_64\nbuildarchtranslate:\tx86_64:\tx86_64" > ~/.rpmrc
    #- name: RPMRC0
    #  run: echo -e "%define arch x86_64\nBuildArch:\t%{arch}" >> ~/.rpmrc
    - name: RPMRC1
      run: cat ~/.rpmrc
    - name: RPMRC2
      run: rpm --eval '%{_target}' && uname -m
    #- name: make tinyconfig
     # run: make tinyconfig
    - name: make oldconfig
      run: make oldconfig
    - name: make clean
      run: make clean
    - name: make rpm-pkg
      run: make ARCH=x86_64 rpm-pkg
    #- name: make binrpm-pkg
    #  run: make binrpm-pkg
#    - run: mkdir -p /home/runner/rpmbuild/RPMS/i386/	#    - run: mkdir -p /home/runner/rpmbuild/RPMS/i386/
#    - run: echo hola >/home/runner/rpmbuild/RPMS/i386/hola.txt	#    - run: echo hola >/home/runner/rpmbuild/RPMS/i386/hola.txt
#    - run: ls -l /home/runner/rpmbuild/RPMS/i386/	#    - run: ls -l /home/runner/rpmbuild/RPMS/i386/
    - uses: actions/upload-artifact@v2
      with:
        name: Compiled_Kernel
        path: ~/rpmbuild/RPMS/x86_64/
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         tag_name: ${{ github.ref }}
         release_name: Release ${{ github.ref }}
         draft: false
         prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
         asset_path: ~/rpmbuild/RPMS/x86_64/
         asset_name: my-artifact.zip
         asset_content_type: application/zip
